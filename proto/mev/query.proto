syntax = "proto3";
package seiprotocol.seichain.mev;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "mev/params.proto";

option go_package = "github.com/sei-protocol/sei-chain/x/mev/types";

// Query defines the gRPC querier service.
service Query {
  // PendingBundles queries all pending MEV bundles
  rpc PendingBundles(QueryPendingBundlesRequest) returns (QueryPendingBundlesResponse) {
    option (google.api.http).get = "/sei-protocol/seichain/mev/pending_bundles";
  }
}

// QueryPendingBundlesRequest is the request type for querying pending bundles
message QueryPendingBundlesRequest {}

// QueryPendingBundlesResponse is the response type for querying pending bundles
message QueryPendingBundlesResponse {
  repeated Bundle bundles = 1 [(gogoproto.nullable) = false];
}

// Bundle represents a MEV bundle
message Bundle {
  string sender = 1 [(gogoproto.moretags) = "yaml:\"sender\""];
  repeated string txs = 2 [(gogoproto.moretags) = "yaml:\"txs\""];
  uint64 block_num = 3 [(gogoproto.moretags) = "yaml:\"block_num\""];
  int64 timestamp = 4 [(gogoproto.moretags) = "yaml:\"timestamp\""];
}
